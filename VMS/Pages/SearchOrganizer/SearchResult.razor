@inject IJSRuntime JsRuntime
<section class="my-container mb-5">
    <h3 class="result-heading mt-4 mb-3">Có <span>@(pagedResult is null ? "0" : pagedResult.TotalItems) tổ chức</span> ứng với kết quả tìm kiếm của bạn</h3>
    @if (pagedResult != null && pagedResult.TotalItems != 0)
    {
        @foreach (var item in pagedResult.Items)
        {
            <div class="org-item d-flex align-items-center justify-content-between">
                <div class="d-flex align-items-center">
                    <img class="org-item__img me-4" src="@item.Banner" alt="Alternate Text" />
                    <div class="org-item__name-group ms-5">
                        <a class="org-item__name" href="#">@item.FullName</a>
                        <p>@item.Course</p>
                    </div>
                </div>
                <div class="org-item__rate-group d-flex align-items-center @(IsUserForAdmin ? "me-3" : "me-5")">
                    <div class="seperate-line"></div>
                    <span class="me-4">#@item.Rank</span>
                    <div>
                        <p class="m-0 d-flex align-items-center">
                            @item.AverageRating
                            <Star Rating="item.AverageRating" />
                        </p>
                        <p class="m-0 @(IsUserResult ? "d-none" : "")">
                            @if (item.QuantityRating >= 1000)
                            {
                                var a = Math.Round((double)item.QuantityRating / 1000, 1, MidpointRounding.ToZero);
                                @(a + "N")
                            }
                            else
                            {
                                @item.QuantityRating
                            }
                            xếp hạng
                        </p>
                        <p class="m-0 @(IsUserResult ? "d-block" : "d-none")">
                            / @(item.QuantityRating) đánh giá
                        </p>
                    </div>
                </div>
            </div>
        }
    }
</section>

<Pager CurrentPage="@pagedResult.PageIndex"
       PageCount="@pagedResult.TotalPages"
       OnPageChanged="@(async (e)=> { page = e; await HandlePageChangedAsync(); })" />

@code {
    private bool isYellow;
    private bool isHalf;

    [Parameter]
    public bool HaveLevel { get; set; }

    [Parameter]
    public bool IsOrgResult { get; set; }

    [Parameter]
    public bool IsUserResult { get; set; }

    [Parameter]
    public bool IsUserForAdmin { get; set; }

}
