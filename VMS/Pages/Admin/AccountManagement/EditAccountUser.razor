@using VMS.Application.ViewModels;

<div class="my-modal">
    <div class="modal__content">
        <div class="modal__edit @(isShowConfirm||isSuccess ? "d-none" : "d-block")">
            <div @onclick="CloseModalAsync" class="icon-close">
                <span class="material-icons">
                    close
                </span>
            </div>
            <h3 class="text-center">Tạo tài khoản <span>Tình nguyện viên</span></h3>
            <EditForm Model="user">
                <DataAnnotationsValidator />
                <div class="d-flex align-items-center mb-3">
                    <p class="form__title form__title--name">Họ và tên <span>(*)</span>:</p>
                    <div class="">
                        <InputText @bind-Value="@user.FullName" class="form-control" />
                    </div>
                </div>
                <div class="d-flex align-items-center mb-3">
                    <p class="form__title form__title--id">MSSV<span>(*)</span>:</p>
                    <div class="">
                        <InputText @bind-Value="@user.Id" class="form-control" />
                    </div>
                    <p class="form__title form__title--course">Khóa<span>(*)</span>:</p>
                    <div class="position-relative">
                        <input @onclick="ToggCourseDropdown" @onfocusout="CloseLevelDropdown" class="popup-btn form-control" value="@courseChoosenValue" readonly />
                        <div @onclick:preventDefault class="my-dropdown" style="display: @(isCourseShow ? "d-block" : "d-none")">
                            <ul>
                                @if (Courses is not null)

                                {
                                    @foreach (var course in Courses)
                                    {
                                        <li @onmousedown="() => ChooseCourseValue(course )">@course.Course</li>
                                    }
                                }
                            </ul>
                        </div>
                        <span class="material-icons-outlined position-absolute popup-btn-icon">
                            expand_more
                        </span>
                    </div>

                </div>
                <div class="d-flex align-items-center mb-3">
                    <p class="form__title form__title--email">Email UEH<span>(*)</span>:</p>
                    <div class="">
                        <InputText @bind-Value="@user.Email" class="form-control" />
                    </div>
                </div>
                <div class="d-flex align-items-center mb-3">
                    <p class="form__title form__title-password">Mật khẩu <span>(*)</span>:</p>
                    <div class="">
                        <input class="form-control" type="password" />
                    </div>
                </div>
                <div class="d-flex align-items-center mb-3">
                    <p class="form__title form__title--passwordSp">Mật khẩu quản trị viên <span>(*)</span>:</p>
                    <div class="">
                        <input class="form-control" type="password" />
                    </div>
                </div>

                <div class="from__btn text-center">
                    <button @onclick="CloseModalAsync" class="btn btn-cancel">Hủy</button>
                    <button @onclick="ShowEditConfirm" type="submit" class="btn btn-create">Sửa tài khoản</button>
                </div>

            </EditForm>

        </div>
        <div class="modal__confirm @(isShowConfirm ? "d-block" : "d-none")">
            <div @onclick="CloseModalAsync" class="icon-close">
                <span class="material-icons">
                    close
                </span>
            </div>
            <div>
                <h3 class="text-center mb-3">Bạn có chắc chắn muốn <span>sửa tài khoản</span> này không? </h3>
                <div class="text-end">
                    <button @onclick="CloseModalAsync" class="btn btn-cancel">Hủy</button>
                    <button @onclick="ShowEditSuccess" class="btn btn-confirm">Chắc chắn</button>
                </div>
            </div>
        </div>
        <div class="modal__success @(isSuccess ? "d-block" : "d-none")">
            <div @onclick="CloseModalAsync" class="icon-close">
                <span class="material-icons">
                    close
                </span>
            </div>
            <h3 class="text-center mb-0">Bạn đã <span>sửa tài khoản</span> thành công </h3>
        </div>

    </div>
</div>

@code {

    //Modal
    private bool isSuccess = false;
    private bool isShowConfirm =false;

    [CascadingParameter]
    public BlazoredModalInstance Modal { get; set; }

    private async Task CloseModalAsync()
    {
        await Modal.CloseAsync();
    }
    private async Task ShowEditSuccess()
    {
        isShowConfirm = false;
        isSuccess = true;
    }

    private async Task ShowEditConfirm()
    {
        isShowConfirm = true;
    }

    //popup drop-down

    private CreateUserProfileViewModel user = new();

    private string courseChoosenValue = "";
    private bool isCourseShow;
    private bool isCourseGrey = false;

    public class fakeCourse
    {
        public string Course { get; set; }
    }
    private List<fakeCourse> Courses = new()
    {
        new fakeCourse() { Course = "K44" },
        new fakeCourse() { Course = "K45" },
        new fakeCourse() { Course = "K46" },
        new fakeCourse() { Course = "K47" },
    };
    private void ChooseCourseValue(fakeCourse course)
    {
        courseChoosenValue = course.Course;
        isCourseGrey = true;
    }
    private void ToggCourseDropdown()
    {
        isCourseShow = !isCourseShow;
    }
    private void CloseLevelDropdown()
    {
        isCourseShow = false;
    }



}
